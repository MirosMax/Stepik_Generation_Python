'''
–ú–∞–≥–∏—á–µ—Å–∫–∏–π –∫–≤–∞–¥—Ä–∞—Ç üå∂Ô∏è
–ú–∞–≥–∏—á–µ—Å–∫–∏–º –∫–≤–∞–¥—Ä–∞—Ç–æ–º –ø–æ—Ä—è–¥–∫–∞ n –Ω–∞–∑—ã–≤–∞–µ—Ç—Å—è –∫–≤–∞–¥—Ä–∞—Ç–Ω–∞—è —Ç–∞–±–ª–∏—Ü–∞ —Ä–∞–∑–º–µ—Ä–∞ n√ón, —Å–æ—Å—Ç–∞–≤–ª–µ–Ω–Ω–∞—è –∏–∑ –≤—Å–µ—Ö —á–∏—Å–µ–ª 1, 2, 3, ‚Ä¶, n**2
—Ç–∞–∫, —á—Ç–æ —Å—É–º–º—ã –ø–æ –∫–∞–∂–¥–æ–º—É —Å—Ç–æ–ª–±—Ü—É, –∫–∞–∂–¥–æ–π —Å—Ç—Ä–æ–∫–µ –∏ –∫–∞–∂–¥–æ–π –∏–∑ –¥–≤—É—Ö –¥–∏–∞–≥–æ–Ω–∞–ª–µ–π —Ä–∞–≤–Ω—ã –º–µ–∂–¥—É —Å–æ–±–æ–π. –ù–∞–ø–∏—à–∏—Ç–µ –ø—Ä–æ–≥—Ä–∞–º–º—É,
–∫–æ—Ç–æ—Ä–∞—è –ø—Ä–æ–≤–µ—Ä—è–µ—Ç, —è–≤–ª—è–µ—Ç—Å—è –ª–∏ –∑–∞–¥–∞–Ω–Ω–∞—è –∫–≤–∞–¥—Ä–∞—Ç–Ω–∞—è –º–∞—Ç—Ä–∏—Ü–∞ –º–∞–≥–∏—á–µ—Å–∫–∏–º –∫–≤–∞–¥—Ä–∞—Ç–æ–º.

–§–æ—Ä–º–∞—Ç –≤—Ö–æ–¥–Ω—ã—Ö –¥–∞–Ω–Ω—ã—Ö
–ù–∞ –≤—Ö–æ–¥ –ø—Ä–æ–≥—Ä–∞–º–º–µ –ø–æ–¥–∞—ë—Ç—Å—è –Ω–∞—Ç—É—Ä–∞–ª—å–Ω–æ–µ —á–∏—Å–ª–æ n ‚Äî –∫–æ–ª–∏—á–µ—Å—Ç–≤–æ —Å—Ç—Ä–æ–∫ –∏ —Å—Ç–æ–ª–±—Ü–æ–≤ –≤ –º–∞—Ç—Ä–∏—Ü–µ, –∑–∞—Ç–µ–º —ç–ª–µ–º–µ–Ω—Ç—ã –º–∞—Ç—Ä–∏—Ü—ã:
n —Å—Ç—Ä–æ–∫, –ø–æ n —á–∏—Å–µ–ª –≤ –∫–∞–∂–¥–æ–π, —Ä–∞–∑–¥–µ–ª—ë–Ω–Ω—ã–µ –ø—Ä–æ–±–µ–ª–∞–º–∏.

–§–æ—Ä–º–∞—Ç –≤—ã—Ö–æ–¥–Ω—ã—Ö –¥–∞–Ω–Ω—ã—Ö
–ü—Ä–æ–≥—Ä–∞–º–º–∞ –¥–æ–ª–∂–Ω–∞ –≤—ã–≤–µ—Å—Ç–∏ YES, –µ—Å–ª–∏ –º–∞—Ç—Ä–∏—Ü–∞ —è–≤–ª—è–µ—Ç—Å—è –º–∞–≥–∏—á–µ—Å–∫–∏–º –∫–≤–∞–¥—Ä–∞—Ç–æ–º, –∏–ª–∏ NO –≤ –ø—Ä–æ—Ç–∏–≤–Ω–æ–º —Å–ª—É—á–∞–µ.
'''


n = int(input())

matrix = []
for i in range(n):
    temp = [int(num) for num in input().split()]
    matrix.append(temp)

verification_amount = sum(matrix[0])

flag = 'YES'

# –ø—Ä–æ–≤–µ—Ä–∫–∞ –Ω–∞–ª–∏—á–∏—è –≤—Å–µ—Ö —á–∏—Å–µ–ª –≤ –º–∞—Ç—Ä–∏—Ü–µ –æ—Ç 1 –¥–æ n**2
ver_list_num = [i for i in range(1, n ** 2 + 1)]
temp = []
for i in range(n):
    for j in range(n):
        temp.append(matrix[i][j])
for i in ver_list_num:
    if i not in temp:
        flag = 'NO'
        break

# –ø—Ä–æ–≤–µ—Ä–∫–∞ —Å—Ç—Ä–æ–∫
if flag == 'YES':
    for i in range(1, n):
        if sum(matrix[i]) != verification_amount:
            flag = 'NO'
            break

# –ø–µ—Ä–µ–≤–æ—Ä–∞—á–∏–≤–∞–µ–º –º–∞—Ç—Ä–∏—Ü—É –∏ –ø—Ä–æ–≤–µ—Ä—è–µ–º —Å—Ç–æ–ª–±—Ü—ã
if flag == 'YES':
    rotated_matrix = []
    for i in range(n):
        temp = []
        for j in range(-1, -(n + 1), -1):
            temp.append(matrix[j][i])
        rotated_matrix.append(temp)
    for i in range(n):
        if sum(rotated_matrix[i]) != verification_amount:
            flag = 'NO'
            break

# –ø—Ä–æ–≤–µ—Ä—è–µ–º –¥–∏–∞–≥–æ–Ω–∞–ª–∏
if flag == 'YES':
    counter_main = 0
    counter_secondary = 0
    for i in range(n):
        for j in range(n):
            if i == j:
                counter_main += matrix[i][j]
            if i + j + 1 == n or j == n - i - 1:
                counter_secondary += matrix[i][j]
    if counter_main != verification_amount or counter_secondary != verification_amount:
        flag = 'NO'

print(flag)